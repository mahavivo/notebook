Linux主要目录的作用总结

了解linux各文件夹作用无疑对于日常使用是很有好处的。本分根据根目录（/）下主要文件夹展开，对各目录作用分别探讨。
FHS
Filesystem Hierarchy Standard（文件系统目录标准）。FHS定义了两层规范，第一层是， / 下面的各个目录应该要放什么文件数据，例如/etc应该要放置设置文件，/bin与/sbin则应该要放置可执行文件等等。第二层则是针对/usr及/var这两个目录的子目录来定义。例如/var/log放置系统登录文件、/usr/share放置共享数据等等。
FHS主要就是解决不同软件的配置管理问题（规范化）。这也正是本文总结能存在的原因。
以下摘自参考文献[1]：
 
可分享的(shareable)
不可分享的(unshareable)
不變的(static)
/usr (軟體放置處)
/etc (設定檔)

/opt (第三方協力軟體)
/boot (開機與核心檔)
可變動的(variable)
/var/mail (使用者郵件信箱)
/var/run (程序相關)

/var/spool/news (新聞群組)
/var/lock (程序相關)
/ root根目录
ttwshell@TTWShell:/$ cd /
ttwshell@TTWShell:/$ ls
bin  boot  dev  etc  home  initrd.img  lib  lib64  lost+found  media  mnt  opt  proc  root  run  sbin  --socket  srv  sys  tmp  usr  var  vmlinuz
以下分别总结。
/bin 二进制可执行命令
/bin目录包含了引导启动所需的命令或普通用户可能用的命令(可能在引导启动后)。这些命令都是二进制文件的可执行程序(bin是binary--二进制的简称)，主要有：cat, chmod, chown, date, mv, mkdir, cp, bash等等常用的指令。
/boot
/boot目录存放引导加载器(bootstraploader)使用的文件，如lilo，核心映像也经常放在这里，而不是放在根目录中。但是如果有许多核心映像，这个目录就可能变得很大，这时使用单独的文件系统会更好一些。还有一点要注意的是，要确保核心映像必须在ide硬盘的前1024柱面内。
也就是说，/boot主要放的是和开关机使用的文件。
/dev 设备特殊文件
/dev目录存放了设备文件，即设备驱动程序，用户通过这些文件访问外部设备。比如，用户可以通过访问/dev/mouse来访问鼠标的输入，就像访问其他文件一样。
/dev目录包括所有设备的设备文件。设备文件用特定的约定命名，这在设备列表中说明。设备文件在安装时由系统产生，以后可以用/dev/makedev描述。/dev/makedev.local是系统管理员为本地设备文件(或连接)写的描述文稿(即如一些非标准设备驱动不是标准makedev的一部分)。下面简要介绍/dev下一些常用文件。
1. /dev/console
系统控制台，也就是直接和系统连接的监视器。
2./dev/hd
ide硬盘驱动程序接口。如：/dev/hda指的是第一个硬盘，had1则是指/dev/hda的第一个分区。如系统中有其他的硬盘，则依次为/dev/hdb、/dev/hdc、......；如有多个分区则依次为hda1、hda2......
3./dev/sd
scsi磁盘驱动程序接口。如有系统有scsi硬盘，就不会访问/dev/had，而会访问/dev/sda。
4./dev/fd
软驱设备驱动程序。如：/dev/fd0指系统的第一个软盘，也就是通常所说的a：盘，/dev/fd1指第二个软盘，......而/dev/fd1h1440则表示访问驱动器1中的4.5高密盘。
5./dev/st
scsi磁带驱动器驱动程序。
6./dev/tty
提供虚拟控制台支持。如：/dev/tty1指的是系统的第一个虚拟控制台，/dev/tty2则是系统的第二个虚拟控制台。
7./dev/pty
提供远程登陆伪终端支持。在进行telnet登录时就要用到/dev/pty设备。
8./dev/ttys
计算机串行接口，对于dos来说就是“com1”口。
9./dev/cua
计算机串行接口，与调制解调器一起使用的设备。
10./dev/null
“黑洞”，所有写入该设备的信息都将消失。例如：当想要将屏幕上的输出信息隐藏起来时，只要将输出信息输入到/dev/null中即可。
/etc 系统管理和配置文件
/etc目录存放着各种系统配置文件，其中包括了用户信息文件/etc/passwd，系统初始化文件/etc/rc等。linux正是这些文件才得以正常地运行。许多网络配置文件也在/etc中。
1. /etc/rc或/etc/rc.d或/etc/rc?.d
启动、或改变运行级时运行的脚本或脚本的目录。
1. /etc/passwd
用户数据库，其中的域给出了用户名、真实姓名、用户起始目录、加密口令和用户的其他信息。
3./etc/fdprm
软盘参数表，用以说明不同的软盘格式。可用setfdprm进行设置。更多的信息见setfdprm的帮助页。
4./etc/fstab
指定启动时需要自动安装的文件系统列表。也包括用swapon-a启用的swap区的信息。
5./etc/group
类似/etc/passwd，但说明的不是用户信息而是组的信息。包括组的各种数据。
6./etc/inittab
init的配置文件。
7./etc/issue
包括用户在登录提示符前的输出信息。通常包括系统的一段短说明或欢迎信息。具体内容由系统管理员确定。
8./etc/magic
“file”的配置文件。包含不同文件格式的说明，“file”基于它猜测文件类型。
9./etc/motd
motd是messageoftheday的缩写，用户成功登录后自动输出。内容由系统管理员确定。常用于通告信息，如计划关机时间的警告等。
10./etc/mtab
当前安装的文件系统列表。由脚本(scritp)初始化，并由mount命令自动更新。当需要一个当前安装的文件系统的列表时使用(例如df命令)。
11./etc/shadow
在安装了影子(shadow)口令软件的系统上的影子口令文件。影子口令文件将/etc/passwd文件中的加密口令移动到/etc/shadow中，而后者只对超级用户(root)可读。这使破译口令更困难，以此增加系统的安全性。
12./etc/login.defs
login命令的配置文件。
13./etc/printcap
类似/etc/termcap，但针对打印机。语法不同。
14./etc/profile、/etc/csh.login、/etc/csh.cshrc
登录或启动时bourne或cshells执行的文件。这允许系统管理员为所有用户建立全局缺省环境。
15./etc/securetty
确认安全终端，即哪个终端允许超级用户(root)登录。一般只列出虚拟控制台，这样就不可能(至少很困难)通过调制解调器(modem)或网络闯入系统并得到超级用户特权。
16./etc/shells
列出可以使用的shell。chsh命令允许用户在本文件指定范围内改变登录的shell。提供一台机器ftp服务的服务进程ftpd检查用户shell是否列在/etc/shells文件中，如果不是，将不允许该用户登录。
17./etc/termcap
终端性能数据库。说明不同的终端用什么“转义序列”控制。写程序时不直接输出转义序列(这样只能工作于特定品牌的终端)，而是从/etc/termcap中查找要做的工作的正确序列。这样，多数的程序可以在多数终端上运行。
/home 用户主目录的基点
比如用户user的主目录就是/home/user，可以用~user表示。
/lib 标准程序设计库
又叫动态链接共享库，作用类似windows里的.dll文件。
/lib目录是根文件系统上的程序所需的共享库，存放了根文件系统程序运行所需的共享文件。这些文件包含了可被许多程序共享的代码，以避免每个程序都包含有相同的子程序的副本，故可以使得可执行文件变得更小，节省空间。
/lib/modules目录包含系统核心可加载各种模块，尤其是那些在恢复损坏的系统时重新引导系统所需的模块(例如网络和文件系统驱动)。
/sbin系统管理命令
/sbin目录类似/bin，也用于存储二进制文件。因为其中的大部分文件多是系统管理员使用的基本的系统程序，所以虽然普通用户必要且允许时可以使用，但一般不给普通用户使用。
/tmp 公用的临时文件存储点
/tmp目录存放程序在运行时产生的信息和数据。但在引导启动后，运行的程序最好使用/var/tmp来代替/tmp，因为前者可能拥有一个更大的磁盘空间。
/root
系统管理员的主目录。
/mnt
系统提供这个目录是让用户临时挂载其他的文件系统。
/mnt目录是系统管理员临时安装(mount)文件系统的安装点。程序并不自动支持安装到/mnt。/mnt下面可以分为许多子目录，例如/mnt/dosa可能是使用msdos文件系统的软驱，而/mnt/exta可能是使用ext2文件系统的软驱，/mnt/cdrom光驱等等。
/lost+found
这个目录平时是空的，系统非正常关机而留下“无家可归”的文件。一般是ext2/ext3/ext4文件系统产生，xfs文件系统不会存在这个目录。
/proc 虚拟的目录
是系统内存的映射。可直接访问这个目录来获取系统信息。
/proc文件系统是一个伪的文件系统，就是说它是一个实际上不存在的目录，因而这是一个非常特殊的目录。它并不存在于某个磁盘上，而是由核心在内存中产生。这个目录用于提供关于系统的信息。下面说明一些最重要的文件和目录(/proc文件系统procman页中有更详细的说明)。
1. /proc/x
关于进程x的信息目录，这一x是这一进程的标识号。每个进程在/proc下有一个名为自己进程号的目录。
1. /proc/cpuinfo
存放处理器(cpu)的信息，如cpu的类型、制造商、型号和性能等。
1. /proc/devices
当前运行的核心配置的设备驱动的列表。
1. /proc/dma
显示当前使用的dma通道。
1. /proc/filesystems
核心配置的文件系统信息。
1. /proc/interrupts
显示被占用的中断信息和占用者的信息，以及被占用的数量。
1. /proc/ioports
当前使用的i/o端口。
1. /proc/kcore
系统物理内存映像。与物理内存大小完全一样，然而实际上没有占用这么多内存；它仅仅是在程序访问它时才被创建。(注意：除非你把它拷贝到什么地方，否则/proc下没有任何东西占用任何磁盘空间。)
1. /proc/kmsg
核心输出的消息。也会被送到syslog。
1. /proc/ksyms
核心符号表。
1. /proc/loadavg
系统“平均负载”；3个没有意义的指示器指出系统当前的工作量。
1. /proc/meminfo
各种存储器使用信息，包括物理内存和交换分区(swap)。
1. /proc/modules
存放当前加载了哪些核心模块信息。
1. /proc/net
网络协议状态信息。
1. /proc/self
存放到查看/proc的程序的进程目录的符号连接。当2个进程查看/proc时，这将会是不同的连接。这主要便于程序得到它自己的进程目录。
1. /proc/stat
系统的不同状态，例如，系统启动后页面发生错误的次数。
1. /proc/uptime
系统启动的时间长度。
1. /proc/version
/var — variable
某些大文件的溢出区，比方说各种服务的日志文件。
/var包含系统一般运行时要改变的数据。通常这些数据所在的目录的大小是要经常变化或扩充的。原来/var目录中有些内容是在/usr中的，但为了保持/usr目录的相对稳定，就把那些需要经常改变的目录放到/var中了。每个系统是特定的，即不通过网络与其他计算机共享。
1. /var/catman
包括了格式化过的帮助(man)页。帮助页的源文件一般存在/usr/man/man中；有些man页可能有预格式化的版本，存在/usr/man/cat中。而其他的man页在第一次看时都需要格式化，格式化完的版本存在/var/man中，这样其他人再看相同的页时就无须等待格式化了。(/var/catman经常被清除，就像清除临时目录一样。)
2./var/lib
存放系统正常运行时要改变的文件。
3./var/local
存放/usr/local中安装的程序的可变数据(即系统管理员安装的程序)。注意，如果必要，即使本地安装的程序也会使用其他/var目录，例如/var/lock。
4./var/lock
锁定文件。许多程序遵循在/var/lock中产生一个锁定文件的约定，以用来支持他们正在使用某个特定的设备或文件。其他程序注意到这个锁定文件时，就不会再使用这个设备或文件。
5./var/log
各种程序的日志(log)文件，尤其是login(/var/log/wtmplog纪录所有到系统的登录和注销)和syslog(/var/log/messages纪录存储所有核心和系统程序信息)。/var/log里的文件经常不确定地增长，应该定期清除。
6./var/run
保存在下一次系统引导前有效的关于系统的信息文件。例如，/var/run/utmp包含当前登录的用户的信息。
7./var/spool
放置“假脱机(spool)”程序的目录，如mail、news、打印队列和其他队列工作的目录。每个不同的spool在/var/spool下有自己的子目录，例如，用户的邮箱就存放在/var/spool/mail中。
8./var/tmp
比/tmp允许更大的或需要存在较长时间的临时文件。注意系统管理员可能不允许/var/tmp有很旧的文件。
/usr — unix software resource
最庞大的目录，要用到的应用程序和文件几乎都在这个目录。其中包含：
/usr/x11r6 存放xwindow的目录 /usr/bin 众多的应用程序 /usr/sbin 超级用户的一些管理程序 /usr/doc linux文档 /usr/includelinux 下开发和编译应用程序所需要的头文件 /usr/lib 常用的动态链接库和软件包的配置文件 /usr/man 帮助文档 /usr/src 源代码，linux内核的源代码就放在/usr/src/linux里 /usr/local/bin 本地增加的命令 /usr/local/lib 本地增加的库根文件系统
/usr是个很重要的目录，通常这一文件系统很大，因为所有程序安装在这里。/usr里的所有文件一般来自linux发行版(distribution)；本地安装的程序和其他东西在/usr/local下，因为这样可以在升级新版系统或新发行版时无须重新安装全部程序。/usr目录下的许多内容是
可选的，但这些功能会使用户使用系统更加有效。/usr可容纳许多大型的软件包和它们的配置文件。下面列出一些重要的目录(一些不太重要的目录被省略了)。
1. /usr/x11r6
包含xwindow系统的所有可执行程序、配置文件和支持文件。为简化x的开发和安装，x的文件没有集成到系统中。xwindow系统是一个功能强大的图形环境，提供了大量的图形工具程序。用户如果对microsoftwindows或machintosh比较熟悉的话，就不会对xwindow系统感到束手无策了。
2./usr/x386
类似/usr/x11r6，但是是专门给x11release5的。
3./usr/bin
集中了几乎所有用户命令，是系统的软件库。另有些命令在/bin或/usr/local/bin中。
4./usr/sbin
包括了根文件系统不必要的系统管理命令，例如多数服务程序。
5./usr/man、/usr/info、/usr/doc
这些目录包含所有手册页、gnu信息文档和各种其他文档文件。每个联机手册的“节”都有两个子目录。例如：/usr/man/man1中包含联机手册第一节的源码(没有格式化的原始文件)，/usr/man/cat1包含第一节已格式化的内容。l联机手册分为以下九节：内部命令、系统调用、库函数、设备、文件格式、游戏、宏软件包、系统管理和核心程序。
6./usr/include
包含了c语言的头文件，这些文件多以.h结尾，用来描述c语言程序中用到的数据结构、子过程和常量。为了保持一致性，这实际上应该放在/usr/lib下，但习惯上一直沿用了这个名字。
7./usr/lib
包含了程序或子系统的不变的数据文件，包括一些site-wide配置文件。名字lib来源于库(library);编程的原始库也存在/usr/lib里。当编译程序时，程序便会和其中的库进行连接。也有许多程序把配置文件存入其中。
8./usr/local
本地安装的软件和其他文件放在这里。这与/usr很相似。用户可能会在这发现一些比较大的软件包，如tex、emacs等。
/proc,/usr,/var,/home目录其他文件系统的安装点。
参考文献
[1] 第五章、Linux 的檔案權限與目錄配置 